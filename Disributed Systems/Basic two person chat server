# chat system, one user hosts other joins, if a user tries to join and no live chat, 
# will expire after 15s, same for host when no one joins.

import im
import time
import sys

# initialise and clear the server
server = im.IMServerProxy('')

# Once chat is live, send message, if message == EXIT, leave chat
# else wait for other user's message to change (meaning its a new message)
# and then display it
def live_chat(you, recipient, incoming_message):
    while (True):
        outgoing_message = input("You: ")
        if (outgoing_message == 'EXIT'):
            server[you] = "[" + you + " has left the chat, enter EXIT to leave]"
            print("\n<<Quitting application . . .>>")
            time.sleep(5)
            server.clear()
            sys.exit()
        server[you] = outgoing_message
        print("\nSending . . .\n")
        while (server[recipient] == incoming_message):
            continue
        incoming_message = server[recipient]
        print("\n" + recipient + ": " + incoming_message.decode("utf-8"))

# method for hosting a chat
def host_chat():
    name = input("\nPlease enter your name: ")
    recipient = input("Please enter recipient name: ")

    message = input("\nYou: ")
    server[name] = message
    server[recipient] = "temp message"
    temp_message = server[recipient]

    print("\n<<Sending . . . please wait>>\n")
    waiting_time = 0
    while (server[recipient] == temp_message):
        server[name] = message
        time.sleep(1)
        waiting_time += 1
        # if no activity within 25s, exit chat as other user not online
        if (waiting_time > 25):
            print("User not online . . . ending chat")
            server.clear()
            sys.exit()
        continue
    print("<<Connection established . . . enter EXIT to end chat>>\n")

    incoming_message = server[recipient]
    print(recipient + ": " + incoming_message.decode("utf-8"))
    live_chat(name, recipient, incoming_message)

# Guest method, join chat if correct host and guest name, else quits after waiting
def guest_chat():
    guest_name = input("\nPlease enter your name: ")
    host = input("Please enter host name: ")

    print("\n<<Connecting . . . please wait>>")
    
    server[host] = "temp message"
    temp_message = server[host]
    waiting_time = 0
    while (server[host] == temp_message):
        time.sleep(1)
        waiting_time += 1
        # if no activity within 15s, exit chat as other user not online
        if (waiting_time > 15):
            print("\n<<Host by name: " + host + " not online . . . ending chat>>\n")
            sys.exit()
        continue
    print("\n<<Connection established . . . enter EXIT to end chat>>\n")
    incoming_message = server[host]
    print(host + ": " + incoming_message.decode("utf-8"))
    live_chat(guest_name, host, incoming_message)


def main():
    print('<<Welcome to the beta version of the Medical Chat System>>\n')
    if (server.keys()[0] != b''):
        print("\n<<A user is already hosting . . . redirecting you to join>>\n")
        guest_chat()
    else:
        server.clear()
        while (True):
            choice = input("<<Enter 1 to host chat>>\n<<Enter 2 to join chat>>\n<<Enter 3 to exit>>\n\nYour choice: ")
            if (choice == '1'):
                host_chat()
            elif (choice == '2'):
                guest_chat()
            elif (choice == '3'):
                sys.exit()
            else:
                print("<<Incorrect choice . . . enter h or j>>")
                continue

main()
#server.clear()

